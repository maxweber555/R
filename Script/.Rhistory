setwd("C:\temp\Git_Pessoal\R\Script")
setwd("C:temp\Git_Pessoal\R\Script")
setwd("C:/temp/Git_Pessoal/R/Script")
# Script teste em R
getwd()
licence())
licence()
print("introdução")
print("introdução a linguagem R")
install.packages("caret")
library(ggplot2)
library(ggplot2)
help(setwd)
# Script teste em R
getwd()
x =1
typeof(x)
class(x)
mode(x)
z = as.integer(x)
a = c(1:5)
b = c(6:10)
a
b
a +b
c=a +b
c
View(iris)
nrow(iris)
nrow(iris)
ncol(iris)
head(iris)
df = data.frame()
aluno = character()
vgsales =read.csv(file='vgsales.csv', header = TRUE, sep = ',')
head(vgsales)
head(vgsales)
df_vgslases = data.frame(vssales)
df_vgslases = data.frame(vgsales)
View(df_vgslases)
head(df_vgslases)
dim(df_vgslases)
head(df_vgslases)
summary(df_vgslases)
summary(df_vgslases)
hist(df_vgslases$EU_Sales)
help("filter")
df = View(iris)
df$Sepal
filter(df,Sepal.Length > 7)
install.packages("dplyr")
filter(df,Sepal.Length > 7)
filter(df,Sepal.Length > 7,.preserve = FALSE)
df
df = View(iris)
df
filter(df,Sepal.Length > 7,.preserve = FALSE)
df_iries =data.frame(iris)
df_iries
filter(df_iries,Sepal.Length > 7,.preserve = FALSE)
filter(df_iries,Sepal.Length > 7)
View(df_iries)
maiorqueseis=filter(df_iries,Sepal.Length> 6)
maiorqueseis=filter(df_iries,'Sepal.Length'> 6)
print(maiorqueseis)
help("subset")
maiorquesete=subset(df_iries,Sepal.Length > 7)
View(maiorquesete)
8 %% 3
8 %% 3
profissoes = c('professora', 'advogado', 'analista', 'vendedor', 'cientista')
# Podemos forçar uma hierarquia
fator_profissoes = factor(profissoes)
is.ordered(fator_profissoes)
ord_fator_profissoes = factor(profissoes,
levels = c('vendedor', 'professora', 'analista', 'advogado','cientista'),
ordered = TRUE)
ord_fator_profissoes
is.ordered(ord_fator_profissoes)
df = data.frame(read.csv(file='vgsales.csv', header=T, sep=','))
head(df)
View(df)
# Visualizar a estrutura de df
str(df)
head(df)
c
# Visualizar a estrutura de df
str(df)
# Para uma variável de fator
summary(df$Publisher)
# Converter a variavel
df$Publisher = factor(df$Publisher)
# Para uma variável de fator
summary(df$Publisher)
# Converter a variavel
df$Publisher = factor(df$Publisher)
summary(df$Publisher)
args(sum)
args(mean)
plot(rnorm(100))
dados = function( ) {
resultado = sample(1:6, size=1)
resultado
}
dados()
numero = 9
numero = 9
lista = list(a=(1:10), b=(10:20))
lista
valor_a
valor_a
inicial_a = 0
inicial_b = 0
for (i in lista$a){
valor_a = valor_a + i
}
inicial_a = 0
inicial_b = 0
for (i in lista$a){
valor_a = valor_a + i
}
or (i in lista$b){
str = c('Nessa unidade', 'sobre estruturas de controles', 'e funcoes',
'trouxe para voce', 'um pouco sobre', 'expressões', 'regulares',
'para aprendermos a', 'buscar padrões')
str
length(str)
# grep()
?grep
# Há alguma palavra ou expresão que tenha o padrão 'ex'
grep('es', str, value=F)
# Se quiser trazer o elemento
grep('es', str, value=T)
# Se quiser trazer o elemento
grep('aprendermos', str, value=T)
# Se quiser trazer o elemento
grep('es', str, value=T)
# grepl()
# Modificação de grep - true or false
grepl('\\d', str)
# gsub()
# substituir o padrão
gsub('para', 'pra', str)
# sub()
# variação
sub('para', 'PARA', str)
# regexpr()
# gregexpr()
?regexp
?gregexpr
hoje = Sys.Date()
hoje
class(hoje)
Sys.time()
Sys.timezone()
# Formatação de horas
# %H: hora
# %M: minuto
# %S: segundo
# %T: formato reduzido para %H:%M:%S
?strptime
# Fazendo alguns testes
as.Date('2021-01-05')
as.Date('May-01-21', format='%b-%d-%y)
# Operaçoes com datas
data = as.Date('2021-01-05', format='%Y-%m-%d)
as.Date('May-01-21', format='%b-%d-%y)
# Operaçoes com datas
data = as.Date('2021-01-05', format='%Y-%m-%d)
as.Date('May-01-21', format='%b-%d-%y)
# Operaçoes com datas
data = as.Date('2021-01-05', format='%Y-%m-%d)
# Fazendo alguns testes
as.Date('2021-01-05')
as.Date('May-01-21', format='%b-%d-%y)
# Operaçoes com datas
data = as.Date('2021-01-05', format='%Y-%m-%d)
data + 1
data - data2
data2 + 1
data - data2
data2 = as.POSIXct('2021-17-06 06:32:451')
vetor = c(1:20)
vetor
vetor10=c(1:10)
vetor10
matrix(1:9,nrow = =3)
matrix(1:9,nrow =3)
matrix(1:9,nrow =3)
matrix_trasposta
matrix_trasposta=t(matrix)
matrix_trasposta
matrix(1:9,nrow =3)
t(matrix)
matrix(1:9,nrow =3)
t(matrix)
matrix(1:9,nrow =3)
t(matrix)
t(matrix)
matrix()=matrix(1:9,nrow =3)
matrix=matrix(1:9,nrow =3)
t(matrix)
matrix
matrix1=matrix(1:9,nrow =3)
matrix2=t(matrix1)
matrix1
matrix2
multi = matrix1 * matrix2
multi
multi_matricial = matrix1 %*% matrix2
multi_matricial
getwd()
